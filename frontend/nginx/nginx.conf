worker_processes  1;

events {
    worker_connections  1024;
}

http {

  # create log
  error_log /usr/share/nginx/html/log.log warn;

  # include mime types for http header detection
  include    /etc/nginx/mime.types;

  upstream docker-backend{
    server survey_app_backend:8081;
  }

  # http server on port 80 for letsencrypt and https rediction
  server {
    listen 80;
    listen [::]:80;
    server_name _;

    # redict all requests to https
    return 301 https://$host$request_uri;
  }

  # https server
  server
  {
    listen 443 ssl;

    # files settings
    root /usr/share/nginx/html;
    index index.php index.html index.htm;

    server_name localhost;

    # ssl certificate files, need to be upgraded with letsencrypt
    ssl_certificate /etc/nginx/ssl/servercert.pem;
    ssl_certificate_key /etc/nginx/ssl/serverkey.pem;

    client_max_body_size 10M;

    #redirect all api request to backend server
    location /api/ {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_cache_bypass $http_upgrade;
      proxy_pass http://docker-backend;
    }

    location /auth/ {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_cache_bypass $http_upgrade;
      proxy_pass http://docker-backend;
    }

    # all wrong requests get redirected to index.html for angular routing
    location / {
      try_files $uri $uri/ /index.html;
    }

    # enable gzip for long files
    gzip on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  }
}

